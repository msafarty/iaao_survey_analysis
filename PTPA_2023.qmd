---
title: "PTPA_2023"
format: 
  html:
    toc: true
    toc-location: left
    embed-resources: true

---

```{r setup, include=FALSE} 
# Remove warnings from outputting to consumer
knitr::opts_chunk$set(warning = FALSE, message = FALSE) 
```

# Intro

Initial visualizations for the PTPA Task Force and their 2024 IAAO Presentation.

# Survey Questions Visualized
## General Topics



```{r include = F}
# Import packages
library(dplyr)
library(ggplot2)
library(tidyr)
library(config)
library(Rcpp)
library(knitr)
library(kableExtra)
library(sf)
library(rnaturalearth)
library(leaflet)
library(plotly)
library(leaflet.extras)
library(DT)
library(stringr)
library(geojsonio)
# Grab histogram generator function
source('functions.R', local = T) 
#__________________Ingest, Clean, Create
# Get PTPA 2023 response data
ptpa23 <- read.csv('analysisData.csv')

# Can eventually get this from dbo.jurisdictions
ptpa23 <- ptpa23 %>% dplyr::mutate(intlGrp = dplyr::case_when(
  jurisdiction_name %in% c('Alabama','Alaska', 'Arizona', 'Arkansas', 'California', 'Colorado', 'Connecticut', 'Delaware', 'Florida', 'Georgia',
 'Hawaii', 'Idaho', 'Illinois', 'Indiana', 'Iowa', 'Kansas', 'Kentucky',
 'Louisiana', 'Maine', 'Maryland', 'Massachusetts', 'Michigan', 'Minnesota',
 'Mississippi', 'Missouri', 'Montana', 'Nebraska', 'Nevada', 'New Hampshire', 'New Jersey', 'New Mexico', 'New York', 'North Carolina', 'North Dakota',
 'Ohio', 'Oklahoma', 'Oregon', 'Pennsylvania', 'Rhode Island', 'South Carolina', 'South Dakota', 'Tennessee', 'Texas', 'Utah', 'Vermont', 'Virginia', 'Washington', 'West Virginia', 'Wisconsin', 'Wyoming'
) ~ 'USA',
jurisdiction_name %in% c('Prince Edward Island', 'Newfoundland and Labrador','Quebec','Yukon','Alberta','British Columbia', 'Manitoba', 'New Brunswick','Northwest Territories', 'Ontario', 'Saskatchewan') ~ 'CANADA',
T ~ 'INTL'))

# Create question vector to dynamically reference in report:
questions <- unique(ptpa23$question_desc)
# Create intlGrp counts to reference later
intlGrpCounts <- ptpa23 %>% filter(question_num == 3) %>% group_by(intlGrp) %>% summarize(n=n()) 
```


### Question 10

```{r echo = F}
# What we want are Yes/Shared answers per sub question
# q10 <- ptpa23 %>% filter(question_num == 10 & response %in% c('Yes','Yes,Performed/shared with other agency', 'Performed/shared with other agency') & sub_question_id != 18) %>% group_by(sub_question,jurisdiction_name)
title <- questions[10]
# ggplot2::ggplot(q10) + ggplot2::geom_bar(aes(y=sub_question)) + theme_minimal() + labs(title = title, y = '') 

q10b <- ptpa23 %>% filter(question_num == 10 & response %in% c('Yes','Yes,Performed/shared with other agency', 'Performed/shared with other agency') & sub_question_id != 18) %>% group_by(sub_question, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2)) 

ggplot2::ggplot(q10b, aes(y = sub_question, x = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge")+
  theme_minimal() + labs(title = title, y = '') 


```

### Question 11

```{r echo = F}
q11 <- ptpa23 %>% filter(question_num == 11 & response != 'NA' )
title <- q11$question_desc
ggplot2::ggplot(q11, aes(y=sub_question)) + ggplot2::geom_bar(aes(y=response)) + theme_minimal() + labs(title = title, y = '') 
```


### Question 13

```{r echo = F}

# tasked to show 3 â€“ 5 most common industry groups
# deciding to do top 5 per intlGrp to allow for interesting diversity to be represented

q13 <- ptpa23 %>% filter(question_num == 13 & sub_question_id != 21 & response != '' & !is.na(response)) %>% group_by(sub_question, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2))

q13INTL_ranking <- q13 %>% filter(intlGrp == 'INTL') %>% arrange(desc(proportion)) %>% head(4)
q13CAN_ranking <- q13 %>% filter(intlGrp == 'CANADA') %>% arrange(desc(proportion)) %>% head(4)
q13USA_ranking <- q13 %>% filter(intlGrp == 'USA') %>% arrange(desc(proportion)) %>% head(4)

title <- questions[13]

ggplot2::ggplot(filter(q13, sub_question %in% c(q13INTL_ranking$sub_question,q13CAN_ranking$sub_question, q13USA_ranking$sub_question)), aes(y = sub_question, x = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge")+
  theme_minimal() + labs(title = title, subtitle = 'Top 4 Per Country Group', y = '') 

```


```{r echo = F}
# q15 <- ptpa23 %>% filter(question_num == 15 & sub_question_id %in% c(1,2,4) & !is.na(response)) %>% group_by(jurisdiction_name, sub_question)

q15 <- ptpa23 %>% filter(question_num == 15 & sub_question_id %in% c(1,2,4) & 
                           response != '' & !is.na(response)
                           ) %>% group_by(sub_question, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2))

title <- questions[15]

ggplot2::ggplot(q15, aes(y = sub_question, x = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge")+
  theme_minimal() + labs(title = title, subtitle = 'Proportions sum to > 1 when more than one method within jurisdiction', y = '') 
```


## Education

### Question 20
Question 20 asked respondents "`r stringr::str_to_lower(questions[20])`" educational or other achievements.

**temp-for data aggregation only** Non-interactive Style, No Country Group:

```{r echo = F}
q20 <- ptpa23 %>% filter(question_num == 20 & response != 'NA' & sub_question_id != 5)
title <- q20$question_desc
ggplot2::ggplot(q20, aes(y=sub_question)) + ggplot2::geom_bar(aes(y=response)) + theme_minimal() + labs(title = title, y = '') 
```

**temp-for data aggregation only** Interactive Style with Country Group:

```{r echo = F}
q20 <- ptpa23 %>% filter(question_num == 20 & response != 'NA' & sub_question_id != 5)
# q20INTL <- q20 %>% filter(intlGrp == 'INTL')
# q20USA <- q20 %>% filter(intlGrp == 'USA')
# q20CANADA <- q20 %>% filter(intlGrp == 'CANADA')
title <- questions[20]
plotly::plot_ly(data = q20, y = ~sub_question, color = ~intlGrp, type = 'histogram') %>% plotly::layout(title = title, plot_bgcolor = '#e5ecf6', yaxis = list(title = "achievements"))
```


```{r echo =F}
q21 <- ptpa23 %>% filter(question_num == 21 & sub_question != 'Please specify the type of reference work' & sub_question != 'Other (please specify)' &                            response != '' & !is.na(response)) %>% group_by(sub_question, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2))

title <- questions[21]

ggplot2::ggplot(q21, aes(y = sub_question, x = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge")+
  theme_minimal() + labs(title = title, y = '') 
```

## Valuation

### Question 22
```{r echo=F}
q22 <- ptpa23 %>% filter(question_num == 22 & sub_question_id == 1 & response != '' & !is.na(response)) %>% group_by(response, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2))

title <- questions[22]

ggplot2::ggplot(q22, aes(x = response, y = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge")+
  theme_minimal() + scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 20)) + # Adjust width as needed
 labs(title = title, y = '', x = '') 
```


### Question 23
```{r echo=F}
q23 <- ptpa23 %>% filter(question_num == 23 & sub_question_id == 1 & response != '' & !is.na(response)) %>% group_by(response, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2))

title <- questions[23]

ggplot2::ggplot(q23, aes(x = response, y = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge")+
  theme_minimal() + scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 20)) +
 labs(title = title, y = '', x = '') 
```



### Question 25
```{r echo = F}
q25 <- ptpa23 %>% filter(question_num == 25 & sub_question_id == 1 & response != 'NA') %>% group_by(intlGrp, sub_question, response) %>% summarize(n=n()) %>% data.frame() %>% filter(!is.na(response))
q25title = questions[25]

ggplot(data = q25, aes(x = response, y = n, fill = intlGrp)) + 
  geom_bar(stat = "identity",  width = 0.4,
           position=position_dodge(width = 0.5))+
  theme_bw() + labs(title = q25title)
```

### Question 26

```{r echo = F}

q26 <- ptpa23 %>% filter(question_num == 26 & response != '' & !is.na(response)) %>% group_by(sub_question, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2)) %>% mutate(sub_question = case_when(sub_question == 'Incentivized properties (whether commercial, industrial, or other)' ~ 'Incentivized properties',
                                  T ~ sub_question))

title <- questions[26]

ggplot2::ggplot(q26, aes(y = sub_question, x = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +  labs(title = 'Are There Statutory Fractional Assessment Levels For..?', y = '') 

# q26 <- ptpa23 %>% filter(question_num == 26 & response != 'NA') %>% mutate(cleanResponse = as.numeric(response)) %>% group_by(intlGrp, sub_question, cleanResponse) %>% summarize(n = n()) %>% data.frame() %>% filter(!is.na(cleanResponse))
# DT::datatable(q26)
```


### Question 31

```{r echo = F}

q31 <- ptpa23 %>% filter(question_num == 31  & response == 'Yes (please describe the fee)') %>% group_by(sub_question, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2))

title <- questions[31]


ggplot2::ggplot(q31, aes(y = '', x = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() +  labs(title = title, y = 'Yes') 
```

### Question 34

```{r echo=F}
# decided to keep potential answers to both sub_question 1 and 2 counting
q34 <- ptpa23 %>% filter(question_num == 34 & sub_question_id != 3 & response != '' & !is.na(response)) %>% group_by(response, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2))

title <- questions[34]

ggplot2::ggplot(q34, aes(y = response, x = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() + labs(title = stringr::str_wrap(title,width=80)) 

```

## Confidentiality

### Question 36

```{r echo=F}
# decided to keep potential answers to both sub_question 1 and 2 counting
q36 <- ptpa23 %>% filter(question_num == 36 & sub_question_id != 5 & response == 'Yes') %>% group_by(sub_question, intlGrp) %>% summarize(n = n()) %>% left_join(intlGrpCounts, by = c('intlGrp')) %>% mutate(proportion = round(n.x/n.y,2))

title <- questions[36]

ggplot2::ggplot(q36, aes(x = sub_question, y = proportion, fill = intlGrp)) +
  geom_bar(stat = "identity", position = "dodge") +
  theme_minimal() + labs(title = stringr::str_wrap(title,width=80), x = '')  + scale_x_discrete(labels = function(x) stringr::str_wrap(x, width = 20)) 

```


### Question 38

```{r echo = F}
q38 <- ptpa23 %>% filter(question_num == 38 & response != 'NA' & sub_question_id == 1) %>% mutate(cleanResponse = dplyr::case_when(
  response == 'No' ~ 'No',
  T ~ 'Yes')
) %>% group_by(intlGrp, sub_question, cleanResponse) %>% summarize(n = n()) %>% data.frame() %>% filter(!is.na(cleanResponse))
q38title <- questions[38]


ggplot(data = q38, aes(x = cleanResponse, y = n, fill = intlGrp)) + 
  geom_bar(stat = "identity",  width = 0.4,
           position=position_dodge(width = 0.5))+
  theme_bw() + labs(title = q38title)





# Basic piechart
ggplot(data = filter(q38, q38$intlGrp == 'USA'), aes(x="", y=n, fill=cleanResponse)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) + labs(title = q38title, subtitle = 'USA') + theme_void()

ggplot(data = filter(q38, q38$intlGrp == 'CANADA'), aes(x="", y=n, fill=cleanResponse)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) + labs(title = q38title, subtitle = 'CANADA') + theme_void()
  
ggplot(data = filter(q38, q38$intlGrp == 'INTL'), aes(x="", y=n, fill=cleanResponse)) +
  geom_bar(stat="identity", width=1, color="white") +
  coord_polar("y", start=0) + labs(title = q38title, subtitle = 'INTERNATIONAL - OUTSIDE NORTH AMERICA') + theme_void()
  
  # theme_void() # remove background, grid, numeric labels
```

## EXEMPTIONS, RELIEF, AND LIMITATIONS

### Question 45

```{r echo = F}
q45 <- ptpa23 %>% filter(question_num == 45 & response != 'NA' & sub_question_id < 6) %>% mutate(cleanResponse = 1) %>%
  group_by(intlGrp, sub_question, cleanResponse) %>% summarize(n = n()) %>% data.frame() %>% filter(!is.na(cleanResponse))
q45title <- questions[45]
q45subqs <- unique(q45$sub_question)


ggplot(data = (q45), aes(x = sub_question, y = n, fill = intlGrp)) + 
  geom_bar(stat = "identity",  width = 0.4,
           position=position_dodge(width = 0.5))+
  theme_bw() + labs(title = q45title) +
 coord_flip()
#}
```



## MANDATED PROPERTY INSPECTIONS/APPRAISAL CYCLE
### Question 72

Some clear problems with output, however, this might have just been how they were allowed to answer. Look into this.

```{r echo = F}
q72 <- ptpa23 %>% filter(question_num == 72 & response != 'NA') %>% 
  group_by(intlGrp, sub_question, response) %>% summarize(n = n()) %>% data.frame() %>% filter(!is.na(response))
q72title <- questions[72]
# q45subqs <- unique(q45$sub_question)


ggplot(data = filter(q72, sub_question == 'Locally Assessed'), aes(x = response, y = n, fill = intlGrp)) + 
  geom_bar(stat = "identity",  width = 0.4,
           position=position_dodge(width = 0.5))+
  theme_bw() + labs(title = q72title, subtitle = 'Locally Assessed') + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
 coord_flip()

ggplot(data = filter(q72, sub_question == 'State Assessed'), aes(x = response, y = n, fill = intlGrp)) + 
  geom_bar(stat = "identity",  width = 0.4,
           position=position_dodge(width = 0.5))+
  theme_bw() + labs(title = q72title, subtitle = 'State Assessed') + theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +
 coord_flip()

ggplot(data = filter(q72, sub_question == 'Other (please type number of years)'), aes(x = response, y = n, fill = intlGrp)) + 
  geom_bar(stat = "identity",  width = 0.4,
           position=position_dodge(width = 0.5))+
  theme_bw() + labs(title = q72title, subtitle = 'Other - messed up right now because we need to clean for # years specifically like we asked for') #+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
```
